(function () {
   'use strict';

   // includes(value) - определяет содержится ли в массиве искомое значение и возвращает true или false.
    var nums = [2, 5, 7, 90, 'екеке', '67'];
    console.log(nums.includes(0));
    console.log(nums.includes(90));
    console.log(nums.includes(9));
    console.log(nums.includes(2));
    console.log(nums.includes('екеке'));
    console.log(nums.includes(67));


  // Alert Prompt Confirm - модальные окна
    alert('message');
     // выводит на экран окно с сообщением и
     // приостанавливает выполнение скрипта,
     // пока пользователь не нажмёт «ОК».

    console.log("After alert");

    prompt("заголовок", "default");
    // выводит модальное окно с заголовком,
    // полем для ввода текста, заполненным строкой по умолчанию default и
    // кнопками OK/CANCEL.
    // если dafault нет, строка для ввода по умолчанию будет пустой, НО лучше ставить '', чем ничего

    var promptRezult = prompt('Enter smth', '');
    console.log("promptRezult", typeof promptRezult, promptRezult);

    // prompt возвращает:
    // 1. то, что ввёл посетитель в виде строки
    // 2. специальное значение null, если ввод отменён.

// parseInt() ParseFloat()

    /*
    parseInt(arg1 [, arg2]);
    Целое число в диапазоне между 2 и 36, представляющее собой основание системы счисления числовой строки string, описанной выше.
    В основном пользователи используют десятичную систему счисления и указывают 10.
    Всегда указывайте этот параметр, чтобы исключить ошибки считывания и гарантировать корректность исполнения и предсказуемость результата
    */
    /*
    Если основание системы счисления имеет значение undefined (неопределено) или равно 0 (или не указано), то JavaScript по умолчанию предполагает следующее:
        Если значение входного параметра string начинается с "0x" или "0X", за основание системы счисления принимается 16, и интерпретации подвергается оставшаяся часть строки.
        Если значение входного параметра string начинается с "0", за основание системы счисления принимается либо 8, либо 10, в зависимости от конкретной реализации. В спецификации ECMAScript 5 прописано использование 10 (десятичная система), но это поддерживается еще не всеми браузерами, поэтому необходимо всегда указывать основание системы счисления при использовании функции parseInt.
        Если значение входного параметра string начинается с любого другого символа, система счисления считается десятичной (основание 10).
    Если первый символ строки не может быть преобразован в число, parseInt возвращает значение NaN.
    */
    // https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/parseInt
    var height = '34.9m';
    height = parseInt(height);  // parseInt() читает из строки целое число

    // parseFloat(arg1) возвращает десятичное число (число с плавающей точкой)
    var weight = '56.25 m';
    weight = parseFloat(weight);  // parseFloat() читает из строки дробное число
    console.log(height);
    console.log(weight);



    confirm("вопрос");
    // окно с вопросом и
    // двумя кнопками: OK и CANCEL.

    console.log("After confirm");

    var confirmRezult = confirm('Answer, pls');
    console.log("confirmRezult", typeof confirmRezult, confirmRezult);

    // confirm возвращает:
    // 1. true при нажатии OK
    // 2. false – при CANCEL(Esc).

}());